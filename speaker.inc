; Audio bits
; Degrees Celcius. 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 
; 20. 30. 40. 50. 60. 70. 80. 90. 100. 200. 300. Ramp to soak. Preheat/Soak. Ramp to peak. 
; Reflow. Cooling. Start. Stop. Warning, critical temperature!. Didn't reach the temperature in 60 seconds. Process aborted.
; LisaV3 (https://text-to-speech-demo.ng.bluemix.net/)

; Command prompt
; Index file: computer_sender -Asw_index.asm -S2000 big_file.wav
; Program Audio: computer_sender â€“COM4 -W -V big_file.wav
cseg
; Approximate index of sounds in file 'temperature.wav'
sound_index:
    db 0x00, 0x5f, 0xde ; 0 
    db 0x00, 0xa4, 0xf1 ; 1 
    db 0x00, 0xe8, 0xdf ; 2 
    db 0x01, 0x2a, 0x21 ; 3 
    db 0x01, 0x6f, 0xd1 ; 4 
    db 0x01, 0xb3, 0x2d ; 5 
    db 0x02, 0x00, 0x2d ; 6 
    db 0x02, 0x4f, 0x35 ; 7 
    db 0x02, 0x8f, 0xdb ; 8 
    db 0x02, 0xd9, 0x6d ; 9 
    db 0x03, 0x1c, 0x05 ; 10 
    db 0x03, 0x6c, 0xe1 ; 11 
    db 0x03, 0xb1, 0x04 ; 12 
    db 0x04, 0x09, 0xe4 ; 13 
    db 0x04, 0x65, 0x57 ; 14 
    db 0x04, 0xbe, 0x72 ; 15 
    db 0x05, 0x1f, 0x7c ; 16 
    db 0x05, 0x84, 0x53 ; 17 
    db 0x05, 0xd9, 0x9b ; 18 
    db 0x06, 0x37, 0x0a ; 19 
    db 0x06, 0x81, 0x96 ; 20 
    db 0x06, 0xc6, 0x45 ; 21 
    db 0x07, 0x0f, 0x53 ; 22 
    db 0x07, 0x5d, 0x44 ; 23 
    db 0x07, 0xb3, 0xf6 ; 24 
    db 0x08, 0x09, 0xab ; 25 
    db 0x08, 0x4e, 0x79 ; 26 
    db 0x08, 0xa1, 0xd8 ; 27 
    db 0x09, 0x08, 0xa8 ; 28 
    db 0x09, 0x65, 0xc5 ; 29 
    db 0x09, 0xc3, 0x16 ; 30 
    db 0x0a, 0x26, 0x96 ; 31 
    db 0x0a, 0x2f, 0x32 ; 32 
    db 0x0a, 0x98, 0x1d ; 33 
    db 0x0a, 0xff, 0xe1 ; 34 
    db 0x0b, 0x53, 0x97 ; 35 
    db 0x0b, 0x9e, 0xdd ; 36 
    db 0x0b, 0xef, 0x27 ; 37 
    db 0x0c, 0x3d, 0xf6 ; 38 
    db 0x0c, 0x8a, 0xba ; 39 
    db 0x0c, 0xf4, 0xc6 ; 40 
    db 0x0d, 0xd9, 0x06 ; 41 
    db 0x0e, 0x50, 0xb6 ; 42 
    db 0x0e, 0x73, 0x4e 

; Size of each sound in 'sound_index'
Size_sound:
    db 0x00, 0x45, 0x13 ; 0 
    db 0x00, 0x43, 0xee ; 1 
    db 0x00, 0x41, 0x42 ; 2 
    db 0x00, 0x45, 0xb0 ; 3 
    db 0x00, 0x43, 0x5c ; 4 
    db 0x00, 0x4d, 0x00 ; 5 
    db 0x00, 0x4f, 0x08 ; 6 
    db 0x00, 0x40, 0xa6 ; 7 
    db 0x00, 0x49, 0x92 ; 8 
    db 0x00, 0x42, 0x98 ; 9 
    db 0x00, 0x50, 0xdc ; 10 
    db 0x00, 0x44, 0x23 ; 11 
    db 0x00, 0x58, 0xe0 ; 12 
    db 0x00, 0x5b, 0x73 ; 13 
    db 0x00, 0x59, 0x1b ; 14 
    db 0x00, 0x61, 0x0a ; 15 
    db 0x00, 0x64, 0xd7 ; 16 
    db 0x00, 0x55, 0x48 ; 17 
    db 0x00, 0x5d, 0x6f ; 18 
    db 0x00, 0x4a, 0x8c ; 19 
    db 0x00, 0x44, 0xaf ; 20 
    db 0x00, 0x49, 0x0e ; 21 
    db 0x00, 0x4d, 0xf1 ; 22 
    db 0x00, 0x56, 0xb2 ; 23 
    db 0x00, 0x55, 0xb5 ; 24 
    db 0x00, 0x44, 0xce ; 25 
    db 0x00, 0x53, 0x5f ; 26 
    db 0x00, 0x66, 0xd0 ; 27 
    db 0x00, 0x5d, 0x1d ; 28 
    db 0x00, 0x5d, 0x51 ; 29 
    db 0x00, 0x63, 0x80 ; 30 
    db 0x00, 0x08, 0x9c ; 31 
    db 0x00, 0x68, 0xeb ; 32 
    db 0x00, 0x67, 0xc4 ; 33 
    db 0x00, 0x53, 0xb6 ; 34 
    db 0x00, 0x4b, 0x46 ; 35 
    db 0x00, 0x50, 0x4a ; 36 
    db 0x00, 0x4e, 0xcf ; 37 
    db 0x00, 0x4c, 0xc4 ; 38 
    db 0x00, 0x6a, 0x0c ; 39 
    db 0x00, 0xe4, 0x40 ; 40 
    db 0x00, 0x77, 0xb0 ; 41 
    db 0x00, 0x22, 0x98 ; 42 

; The sound and its length from the two tables above is passed in the accumulator.
Play_Sound_Using_Index:

	setb SOUND ; Turn speaker on
	clr TMOD20 ; Stop the CCU from playing previous request
	setb FLASH_CE
	
	; There are three bytes per row in our tables, so multiply index by three
	mov b, #3
	mul ab
	mov R0, a ; Make a copy of the index*3
	
	clr FLASH_CE ; Enable SPI Flash
	mov a, #READ_BYTES
	lcall Send_SPI
	; Set the initial position in memory of where to start playing
	mov dptr, #sound_index
	mov a, R0
	movc a, @a+dptr
	lcall Send_SPI
	inc dptr
	mov a, R0
	movc a, @a+dptr
	lcall Send_SPI
	inc dptr
	mov a, R0
	movc a, @a+dptr
	lcall Send_SPI
	; Now set how many bytes to play
	mov dptr, #Size_sound
	mov a, R0
	movc a, @a+dptr
	mov w+2, a
	inc dptr
	mov a, R0
	movc a, @a+dptr
	mov w+1, a
	inc dptr
	mov a, R0
	movc a, @a+dptr
	mov w+0, a
	
	mov a, #0x00 ; Request first byte to send to DAC
	lcall Send_SPI
	
	setb TMOD20 ; Start playback by enabling CCU timer

	ret
